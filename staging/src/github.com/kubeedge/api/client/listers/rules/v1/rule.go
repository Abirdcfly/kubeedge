/*
Copyright The KubeEdge Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/kubeedge/api/apis/rules/v1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// RuleLister helps list Rules.
// All objects returned here must be treated as read-only.
type RuleLister interface {
	// List lists all Rules in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Rule, err error)
	// Rules returns an object that can list and get Rules.
	Rules(namespace string) RuleNamespaceLister
	RuleListerExpansion
}

// ruleLister implements the RuleLister interface.
type ruleLister struct {
	listers.ResourceIndexer[*v1.Rule]
}

// NewRuleLister returns a new RuleLister.
func NewRuleLister(indexer cache.Indexer) RuleLister {
	return &ruleLister{listers.New[*v1.Rule](indexer, v1.Resource("rule"))}
}

// Rules returns an object that can list and get Rules.
func (s *ruleLister) Rules(namespace string) RuleNamespaceLister {
	return ruleNamespaceLister{listers.NewNamespaced[*v1.Rule](s.ResourceIndexer, namespace)}
}

// RuleNamespaceLister helps list and get Rules.
// All objects returned here must be treated as read-only.
type RuleNamespaceLister interface {
	// List lists all Rules in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Rule, err error)
	// Get retrieves the Rule from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.Rule, error)
	RuleNamespaceListerExpansion
}

// ruleNamespaceLister implements the RuleNamespaceLister
// interface.
type ruleNamespaceLister struct {
	listers.ResourceIndexer[*v1.Rule]
}
