/*
Copyright The KubeEdge Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/kubeedge/api/apis/devices/v1beta1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// DeviceLister helps list Devices.
// All objects returned here must be treated as read-only.
type DeviceLister interface {
	// List lists all Devices in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.Device, err error)
	// Devices returns an object that can list and get Devices.
	Devices(namespace string) DeviceNamespaceLister
	DeviceListerExpansion
}

// deviceLister implements the DeviceLister interface.
type deviceLister struct {
	listers.ResourceIndexer[*v1beta1.Device]
}

// NewDeviceLister returns a new DeviceLister.
func NewDeviceLister(indexer cache.Indexer) DeviceLister {
	return &deviceLister{listers.New[*v1beta1.Device](indexer, v1beta1.Resource("device"))}
}

// Devices returns an object that can list and get Devices.
func (s *deviceLister) Devices(namespace string) DeviceNamespaceLister {
	return deviceNamespaceLister{listers.NewNamespaced[*v1beta1.Device](s.ResourceIndexer, namespace)}
}

// DeviceNamespaceLister helps list and get Devices.
// All objects returned here must be treated as read-only.
type DeviceNamespaceLister interface {
	// List lists all Devices in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.Device, err error)
	// Get retrieves the Device from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1beta1.Device, error)
	DeviceNamespaceListerExpansion
}

// deviceNamespaceLister implements the DeviceNamespaceLister
// interface.
type deviceNamespaceLister struct {
	listers.ResourceIndexer[*v1beta1.Device]
}
